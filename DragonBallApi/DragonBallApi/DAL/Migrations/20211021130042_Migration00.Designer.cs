// <auto-generated />
using DragonBallApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DragonBallApi.DAL.Migrations
{
    [DbContext(typeof(DragonBallContext))]
    [Migration("20211021130042_Migration00")]
    partial class Migration00
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DragonBallApi.Domain.Entity.CharacterSpecies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("SpecieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("SpecieId");

                    b.ToTable("CharacterSpecies");
                });

            modelBuilder.Entity("DragonBallApi.Domain.Entity.Characters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirthDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DeathDate")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Gender")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ImagePerfil")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("OriginPlanetId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OriginPlanetId");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("DragonBallApi.Domain.Entity.CoverImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoverImage");
                });

            modelBuilder.Entity("DragonBallApi.Domain.Entity.OriginPlanet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OriginPlanet");
                });

            modelBuilder.Entity("DragonBallApi.Domain.Entity.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("DragonBallApi.Domain.Entity.CharacterSpecies", b =>
                {
                    b.HasOne("DragonBallApi.Domain.Entity.Characters", "Characters")
                        .WithMany("CharacterSpecies")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DragonBallApi.Domain.Entity.Species", "Species")
                        .WithMany("CharacterSpecies")
                        .HasForeignKey("SpecieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Characters");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("DragonBallApi.Domain.Entity.Characters", b =>
                {
                    b.HasOne("DragonBallApi.Domain.Entity.OriginPlanet", "OriginPlanet")
                        .WithMany("Characters")
                        .HasForeignKey("OriginPlanetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OriginPlanet");
                });

            modelBuilder.Entity("DragonBallApi.Domain.Entity.Characters", b =>
                {
                    b.Navigation("CharacterSpecies");
                });

            modelBuilder.Entity("DragonBallApi.Domain.Entity.OriginPlanet", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("DragonBallApi.Domain.Entity.Species", b =>
                {
                    b.Navigation("CharacterSpecies");
                });
#pragma warning restore 612, 618
        }
    }
}
